# include:
#   - "./ELK/docker-compose-elk.yml"

services:
  db:
    build: ./postgresql/
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    container_name: trans_db
    environment:    
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - transcendence_net
    ports:
      - "5432:5432"

  django:
    build: ./django_trans/
    volumes:
      - .:/usr/src/app  # Mount the entire project folder if needed for code access
      - media_volume:/usr/src/app/media/  # Consistent media volume mount
      - static_volume:/usr/src/app/static/  # Static volume mount
    command: gunicorn django_trans.wsgi:application --bind 0.0.0.0:8000
    container_name: trans_django
    environment:
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@localhost:5432/${DB_NAME}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      CLIENT_ID: ${CLIENT_ID}
      CLIENT_SECRET: ${CLIENT_SECRET}
      SECRET_KEY: ${SECRET_KEY}
      DJANGO_SU: ${DJANGO_SU}
      DJANGO_SUPW: ${DJANGO_SUPW}
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - transcendence_net
  
  nginx:
      image: nginx:alpine
      volumes:
        - ./nginx/nginx.conf:/etc/nginx/nginx.conf
        - ./nginx/certs:/etc/nginx/certs:ro
        - static_volume:/usr/src/app/static/  # Consistent static volume mount
        - media_volume:/usr/src/app/media/  # Consistent media volume mount
      ports:
        - "443:443"
        - "80:80"
      depends_on:
        - django
      networks:
        - transcendence_net
 
volumes:
  postgres_data:
  static_volume:
  media_volume:
networks:
  transcendence_net:
    driver: bridge
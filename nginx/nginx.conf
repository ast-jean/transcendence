server {
    listen 443 ssl;
    server_name localhost;  # Update this to your domain name

    ssl_certificate /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.key;
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    location / {
        proxy_pass http://django:8000;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_redirect off;
    }

    location /ws/ {
            proxy_pass http://django:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_redirect off;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /wss/pong/ {
            proxy_pass http://django:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_redirect off;
        }



    # Configuration for serving static and media files directly from Nginx
    location /static/ {
        alias /usr/src/app/static/;  # Ensure this path matches where you're storing static files
    }

    location /media/ {
        alias /usr/src/app/media/;  # Ensure this path matches where you're storing media files
    }
}

# server {
#     listen 80;
#     server_name localhost;  # Match your domain
#     return 301 https://$host$request_uri;
# }